---
- name: Configure raspberry pi lite os to run k8s
  hosts: rpi_all
  become: yes
  gather_facts: no
  tasks:
    - name: Execute apt update and upgrade distro
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600
        autoclean: yes
        autoremove: yes

    - name: Check for reboot required flag
      register: reboot_required_flag
      stat:
        path: /var/run/reboot-required
        get_md5: no

    - name: Reboot system if flag file exists
      ansible.builtin.reboot:
        msg: "Rebooting by ansible due to pending updates."
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_flag.stat.exists

    - name: Install vim for editing files
      ansible.builtin.apt:
        pkg:
          - vim

    # recommended swap off and disable swapfile for k8s due to performance issues and predictable memory usage
    - name: load package facts installed on the system
      ansible.builtin.package_facts:
        manager: auto

    - name: Turn off "dphys-swapfile" if installed
      ansible.builtin.command: dphys-swapfile swapoff
      when: "'dphys-swapfile' in ansible_facts.packages"

    - name: Run uninstall on "dphys-swapfile" to disable it
      ansible.builtin.command: dphys-swapfile uninstall
      when: "'dphys-swapfile' in ansible_facts.packages"

    - name: Uninstall "dphys-swapfile" package from the system
      ansible.builtin.apt:
        pkg: dphys-swapfile
        state: absent
        purge: yes
        autoclean: yes
        autoremove: yes
      when: "'dphys-swapfile' in ansible_facts.packages"


    # Configure cgroup for install container runtime

    - name: Configure cgroup in /boot/firmware/cmdline.txt
      ansible.builtin.lineinfile:
        path: /boot/firmware/cmdline.txt
        backrefs: yes
        regexp: '^((?!.*cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1).*)$'
        line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1'


    # Install containerd container runtime

    - name: Install containerd container runtime and containernetworking-plugins
      ansible.builtin.apt:
        pkg:
          - containerd
          - containernetworking-plugins

    # Configure containerd to use systemd cgroup driver

    - name: Configure containerd
      ansible.builtin.copy:
        content: |
          version = 2
          [plugins]
            [plugins."io.containerd.grpc.v1.cri"]
              [plugins."io.containerd.grpc.v1.cri".containerd]
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
                  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                    runtime_type = "io.containerd.runc.v2"
                    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                      SystemdCgroup = true
        dest: /etc/containerd/config.toml
        backup: yes
        owner: root
        group: root
        mode: '0644'


    # configure iptables to see bridged traffic

    - name: create /etc/modules-load.d/k8s.conf file
      ansible.builtin.copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf
        backup: yes
        owner: root
        group: root
        mode: '0644'

    - name: configure modprobe overlay
      ansible.builtin.command: modprobe overlay

    - name: configure modprobe br_netfilter
      ansible.builtin.command: modprobe br_netfilter

    - name: Create /etc/sysctl.d/k8s.conf file to configure iptables
      ansible.builtin.copy:
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        dest: /etc/sysctl.d/k8s.conf
        backup: yes
        owner: root
        group: root
        mode: '0644'

    - name: Run sysctl to apply system changes
      ansible.builtin.command: sysctl --system


    # Install cretificates and required packages for kubelet kubeadm kubectl

    - name: Install certificates and required packages https
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl

    - name: Add public signing key for Kubernetes packages
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        owner: root
        group: root
        mode: '0644'

    - name: Add Kubernetes ppa repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        state: present
        filename: kubernetes
        update_cache: yes

    - name: Install kubelet kubeadm kubectl packages
      ansible.builtin.apt:
        pkg:
          - kubelet
          - kubeadm
          - kubectl

    - name: Hold kubelet package
      dpkg_selections:
        name: kubelet
        selection: hold

    - name: Hold kubeadm package
      dpkg_selections:
        name: kubeadm
        selection: hold

    - name: Hold kubectl package
      dpkg_selections:
        name: kubectl
        selection: hold


    # Download and install Flannel for networking

    - name: Download and install Flannel for arm64 architecture
      ansible.builtin.get_url:
        url: https://github.com/flannel-io/flannel/releases/download/v0.25.4/flanneld-amd64
        dest: /usr/local/bin/flanneld
        owner: root
        group: root
        mode: '0755'

    - name: Create Flannel networks directory
      ansible.builtin.file:
        path: /var/lib/k8s/flannel/networks
        state: directory
        recurse: yes
        owner: root
        group: root
        mode: '0755'


    # Reboot system

    - name: reboot
      reboot: